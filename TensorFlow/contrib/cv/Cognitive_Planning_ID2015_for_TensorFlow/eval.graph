node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 128
          }
        }
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00000-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00001-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00002-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00003-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00004-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00005-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00006-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00007-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00008-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00009-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00010-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00011-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00012-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00013-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00014-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00015-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00016-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00017-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00018-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00019-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00020-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00021-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00022-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00023-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00024-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00025-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00026-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00027-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00028-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00029-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00030-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00031-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00032-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00033-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00034-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00035-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00036-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00037-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00038-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00039-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00040-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00041-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00042-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00043-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00044-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00045-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00046-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00047-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00048-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00049-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00050-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00051-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00052-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00053-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00054-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00055-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00056-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00057-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00058-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00059-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00060-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00061-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00062-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00063-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00064-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00065-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00066-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00067-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00068-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00069-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00070-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00071-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00072-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00073-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00074-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00075-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00076-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00077-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00078-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00079-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00080-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00081-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00082-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00083-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00084-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00085-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00086-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00087-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00088-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00089-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00090-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00091-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00092-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00093-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00094-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00095-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00096-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00097-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00098-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00099-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00100-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00101-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00102-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00103-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00104-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00105-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00106-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00107-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00108-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00109-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00110-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00111-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00112-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00113-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00114-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00115-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00116-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00117-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00118-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00119-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00120-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00121-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00122-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00123-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00124-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00125-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00126-of-00128"
        string_val: "/data/imagenet-2012/imagenet-with-bbox-validation-00127-of-00128"
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Greater"
  op: "Greater"
  input: "batch_processing/filename_queue/Size"
  input: "batch_processing/filename_queue/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Assert"
  op: "Assert"
  input: "batch_processing/filename_queue/Greater"
  input: "batch_processing/filename_queue/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/filename_queue/Identity"
  op: "Identity"
  input: "batch_processing/filename_queue/Const"
  input: "^batch_processing/filename_queue/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_processing/filename_queue/filename_queue_EnqueueMany"
  op: "QueueEnqueueMany"
  input: "batch_processing/filename_queue"
  input: "batch_processing/filename_queue/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/filename_queue"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/filename_queue/filename_queue_Close"
  op: "QueueClose"
  input: "batch_processing/filename_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/filename_queue"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/filename_queue/filename_queue_Close_1"
  op: "QueueClose"
  input: "batch_processing/filename_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/filename_queue"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch_processing/filename_queue/filename_queue_Size"
  op: "QueueSize"
  input: "batch_processing/filename_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/filename_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/Cast"
  op: "Cast"
  input: "batch_processing/filename_queue/filename_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/mul"
  op: "Mul"
  input: "batch_processing/filename_queue/Cast"
  input: "batch_processing/filename_queue/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/batch_processing/filename_queue/fraction_of_1_full"
      }
    }
  }
}
node {
  name: "batch_processing/filename_queue/ScalarSummary"
  op: "ScalarSummary"
  input: "batch_processing/filename_queue/ScalarSummary/tags"
  input: "batch_processing/filename_queue/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/fifo_examples_queue"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1124
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_processing/fifo_examples_queue_Size"
  op: "QueueSize"
  input: "batch_processing/fifo_examples_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/fifo_examples_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ToFloat"
  op: "Cast"
  input: "batch_processing/fifo_examples_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000889679708052
      }
    }
  }
}
node {
  name: "batch_processing/mul"
  op: "Mul"
  input: "batch_processing/ToFloat"
  input: "batch_processing/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/batch_processing/fifo_examples_queue/fraction_of_1124_full"
      }
    }
  }
}
node {
  name: "batch_processing/ScalarSummary"
  op: "ScalarSummary"
  input: "batch_processing/ScalarSummary/tags"
  input: "batch_processing/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/SSTableReader"
  op: "SSTableReader"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_prefix"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_processing/ReaderRead"
  op: "ReaderRead"
  input: "batch_processing/SSTableReader"
  input: "batch_processing/filename_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/SSTableReader"
        s: "loc:@batch_processing/filename_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/ReaderRead:1"
  input: "batch_processing/ParseSingleExample/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/key_image/class/label"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample/ParseExample/key_image/class/label"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/key_image/class/text"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape_1"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample/ParseExample/key_image/class/text"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/key_image/encoded"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/Reshape_2"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample/ParseExample/key_image/encoded"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/label"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/text"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/encoded"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/ParseExample/ParseExample"
  op: "ParseExample"
  input: "batch_processing/ParseSingleExample/ExpandDims"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/names"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_0"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_1"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_2"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/sparse_keys_3"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_0"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_1"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample/dense_keys_2"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape_1"
  input: "batch_processing/ParseSingleExample/ParseExample/Reshape_2"
  attr {
    key: "Ndense"
    value {
      i: 3
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 4
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_image/class/label"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_image/class/text"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_image/encoded"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:14"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:8"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:1"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:9"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:2"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:10"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:3"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample/Slice_Indices_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:11"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample/Squeeze_Shape_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Cast"
  op: "Cast"
  input: "batch_processing/ParseSingleExample/Squeeze_image/class/label"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:5"
  input: "batch_processing/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_1"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:7"
  input: "batch_processing/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_2"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:4"
  input: "batch_processing/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_3"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample/ParseExample/ParseExample:6"
  input: "batch_processing/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/concat"
  op: "Concat"
  input: "batch_processing/concat/concat_dim"
  input: "batch_processing/ExpandDims_1"
  input: "batch_processing/ExpandDims"
  input: "batch_processing/ExpandDims_3"
  input: "batch_processing/ExpandDims_2"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_4"
  op: "ExpandDims"
  input: "batch_processing/concat"
  input: "batch_processing/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/transpose"
  op: "Transpose"
  input: "batch_processing/ExpandDims_4"
  input: "batch_processing/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg/DecodeJpeg"
  op: "DecodeJpeg"
  input: "batch_processing/ParseSingleExample/Squeeze_image/encoded"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/decode_jpg/convert_image/Cast"
  op: "Cast"
  input: "batch_processing/decode_jpg/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg/convert_image"
  op: "Mul"
  input: "batch_processing/decode_jpg/convert_image/Cast"
  input: "batch_processing/decode_jpg/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/Shape"
  op: "Shape"
  input: "batch_processing/decode_jpg/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/assert_less/Less"
  op: "Less"
  input: "batch_processing/eval_image/assert_positive/Const"
  input: "batch_processing/eval_image/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/assert_less/All"
  op: "All"
  input: "batch_processing/eval_image/assert_positive/assert_less/Less"
  input: "batch_processing/eval_image/assert_positive/assert_less/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/assert_less/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/assert_positive/assert_less/Assert"
  op: "Assert"
  input: "batch_processing/eval_image/assert_positive/assert_less/All"
  input: "batch_processing/eval_image/assert_positive/assert_less/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/eval_image/Shape_1"
  op: "Shape"
  input: "batch_processing/decode_jpg/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice"
  op: "StridedSlice"
  input: "batch_processing/eval_image/Shape_1"
  input: "batch_processing/eval_image/strided_slice/pack"
  input: "batch_processing/eval_image/strided_slice/pack_1"
  input: "batch_processing/eval_image/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image/Div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/Div"
  op: "Div"
  input: "batch_processing/eval_image/strided_slice"
  input: "batch_processing/eval_image/Div/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_1"
  op: "StridedSlice"
  input: "batch_processing/eval_image/Shape_1"
  input: "batch_processing/eval_image/strided_slice_1/pack"
  input: "batch_processing/eval_image/strided_slice_1/pack_1"
  input: "batch_processing/eval_image/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image/Div_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/Div_1"
  op: "Div"
  input: "batch_processing/eval_image/strided_slice_1"
  input: "batch_processing/eval_image/Div_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_2"
  op: "StridedSlice"
  input: "batch_processing/eval_image/Shape_1"
  input: "batch_processing/eval_image/strided_slice_2/pack"
  input: "batch_processing/eval_image/strided_slice_2/pack_1"
  input: "batch_processing/eval_image/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/mul"
  op: "Mul"
  input: "batch_processing/eval_image/Div"
  input: "batch_processing/eval_image/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/sub"
  op: "Sub"
  input: "batch_processing/eval_image/strided_slice_2"
  input: "batch_processing/eval_image/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/strided_slice_3"
  op: "StridedSlice"
  input: "batch_processing/eval_image/Shape_1"
  input: "batch_processing/eval_image/strided_slice_3/pack"
  input: "batch_processing/eval_image/strided_slice_3/pack_1"
  input: "batch_processing/eval_image/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/mul_1"
  op: "Mul"
  input: "batch_processing/eval_image/Div_1"
  input: "batch_processing/eval_image/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/sub_1"
  op: "Sub"
  input: "batch_processing/eval_image/strided_slice_3"
  input: "batch_processing/eval_image/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/pack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/pack"
  op: "Pack"
  input: "batch_processing/eval_image/Div"
  input: "batch_processing/eval_image/Div_1"
  input: "batch_processing/eval_image/pack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image/pack_1/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/pack_1"
  op: "Pack"
  input: "batch_processing/eval_image/sub"
  input: "batch_processing/eval_image/sub_1"
  input: "batch_processing/eval_image/pack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image/Slice"
  op: "Slice"
  input: "batch_processing/decode_jpg/convert_image"
  input: "batch_processing/eval_image/pack"
  input: "batch_processing/eval_image/pack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/eval_image/Slice"
  input: "batch_processing/eval_image/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/ResizeBilinear/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\001\000\000+\001\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/eval_image/ResizeBilinear"
  op: "ResizeBilinear"
  input: "batch_processing/eval_image/ExpandDims"
  input: "batch_processing/eval_image/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image/Squeeze"
  op: "Squeeze"
  input: "batch_processing/eval_image/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "batch_processing/Sub"
  op: "Sub"
  input: "batch_processing/eval_image/Squeeze"
  input: "batch_processing/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "batch_processing/Mul"
  op: "Mul"
  input: "batch_processing/Sub"
  input: "batch_processing/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/ReaderRead:1"
  input: "batch_processing/ParseSingleExample_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/key_image/class/label"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_1/ParseExample/key_image/class/label"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/key_image/class/text"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_1"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_1/ParseExample/key_image/class/text"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/key_image/encoded"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_2"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_1/ParseExample/key_image/encoded"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/label"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/text"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/encoded"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample"
  op: "ParseExample"
  input: "batch_processing/ParseSingleExample_1/ExpandDims"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/names"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_0"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_1"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_2"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/sparse_keys_3"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_0"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_1"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample/dense_keys_2"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_1"
  input: "batch_processing/ParseSingleExample_1/ParseExample/Reshape_2"
  attr {
    key: "Ndense"
    value {
      i: 3
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 4
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_image/class/label"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_image/class/text"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_image/encoded"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:14"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:8"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:1"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:9"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:2"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:10"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:3"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_1/Slice_Indices_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:11"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_1/Squeeze_Shape_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Cast_1"
  op: "Cast"
  input: "batch_processing/ParseSingleExample_1/Squeeze_image/class/label"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_5"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:5"
  input: "batch_processing/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_6"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:7"
  input: "batch_processing/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_7"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:4"
  input: "batch_processing/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_8"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_1/ParseExample/ParseExample:6"
  input: "batch_processing/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/concat_1"
  op: "Concat"
  input: "batch_processing/concat_1/concat_dim"
  input: "batch_processing/ExpandDims_6"
  input: "batch_processing/ExpandDims_5"
  input: "batch_processing/ExpandDims_8"
  input: "batch_processing/ExpandDims_7"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_9"
  op: "ExpandDims"
  input: "batch_processing/concat_1"
  input: "batch_processing/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/transpose_1"
  op: "Transpose"
  input: "batch_processing/ExpandDims_9"
  input: "batch_processing/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_1/DecodeJpeg"
  op: "DecodeJpeg"
  input: "batch_processing/ParseSingleExample_1/Squeeze_image/encoded"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/decode_jpg_1/convert_image/Cast"
  op: "Cast"
  input: "batch_processing/decode_jpg_1/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_1/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_1/convert_image"
  op: "Mul"
  input: "batch_processing/decode_jpg_1/convert_image/Cast"
  input: "batch_processing/decode_jpg_1/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Shape"
  op: "Shape"
  input: "batch_processing/decode_jpg_1/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/assert_less/Less"
  op: "Less"
  input: "batch_processing/eval_image_1/assert_positive/Const"
  input: "batch_processing/eval_image_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/assert_less/All"
  op: "All"
  input: "batch_processing/eval_image_1/assert_positive/assert_less/Less"
  input: "batch_processing/eval_image_1/assert_positive/assert_less/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/assert_less/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/assert_positive/assert_less/Assert"
  op: "Assert"
  input: "batch_processing/eval_image_1/assert_positive/assert_less/All"
  input: "batch_processing/eval_image_1/assert_positive/assert_less/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Shape_1"
  op: "Shape"
  input: "batch_processing/decode_jpg_1/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice"
  op: "StridedSlice"
  input: "batch_processing/eval_image_1/Shape_1"
  input: "batch_processing/eval_image_1/strided_slice/pack"
  input: "batch_processing/eval_image_1/strided_slice/pack_1"
  input: "batch_processing/eval_image_1/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Div"
  op: "Div"
  input: "batch_processing/eval_image_1/strided_slice"
  input: "batch_processing/eval_image_1/Div/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_1"
  op: "StridedSlice"
  input: "batch_processing/eval_image_1/Shape_1"
  input: "batch_processing/eval_image_1/strided_slice_1/pack"
  input: "batch_processing/eval_image_1/strided_slice_1/pack_1"
  input: "batch_processing/eval_image_1/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Div_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Div_1"
  op: "Div"
  input: "batch_processing/eval_image_1/strided_slice_1"
  input: "batch_processing/eval_image_1/Div_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_2"
  op: "StridedSlice"
  input: "batch_processing/eval_image_1/Shape_1"
  input: "batch_processing/eval_image_1/strided_slice_2/pack"
  input: "batch_processing/eval_image_1/strided_slice_2/pack_1"
  input: "batch_processing/eval_image_1/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/mul"
  op: "Mul"
  input: "batch_processing/eval_image_1/Div"
  input: "batch_processing/eval_image_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/sub"
  op: "Sub"
  input: "batch_processing/eval_image_1/strided_slice_2"
  input: "batch_processing/eval_image_1/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/strided_slice_3"
  op: "StridedSlice"
  input: "batch_processing/eval_image_1/Shape_1"
  input: "batch_processing/eval_image_1/strided_slice_3/pack"
  input: "batch_processing/eval_image_1/strided_slice_3/pack_1"
  input: "batch_processing/eval_image_1/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/mul_1"
  op: "Mul"
  input: "batch_processing/eval_image_1/Div_1"
  input: "batch_processing/eval_image_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/sub_1"
  op: "Sub"
  input: "batch_processing/eval_image_1/strided_slice_3"
  input: "batch_processing/eval_image_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/pack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/pack"
  op: "Pack"
  input: "batch_processing/eval_image_1/Div"
  input: "batch_processing/eval_image_1/Div_1"
  input: "batch_processing/eval_image_1/pack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_1/pack_1/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/pack_1"
  op: "Pack"
  input: "batch_processing/eval_image_1/sub"
  input: "batch_processing/eval_image_1/sub_1"
  input: "batch_processing/eval_image_1/pack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Slice"
  op: "Slice"
  input: "batch_processing/decode_jpg_1/convert_image"
  input: "batch_processing/eval_image_1/pack"
  input: "batch_processing/eval_image_1/pack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/eval_image_1/Slice"
  input: "batch_processing/eval_image_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/ResizeBilinear/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\001\000\000+\001\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_1/ResizeBilinear"
  op: "ResizeBilinear"
  input: "batch_processing/eval_image_1/ExpandDims"
  input: "batch_processing/eval_image_1/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_1/Squeeze"
  op: "Squeeze"
  input: "batch_processing/eval_image_1/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "batch_processing/Sub_1"
  op: "Sub"
  input: "batch_processing/eval_image_1/Squeeze"
  input: "batch_processing/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "batch_processing/Mul_1"
  op: "Mul"
  input: "batch_processing/Sub_1"
  input: "batch_processing/Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/ReaderRead:1"
  input: "batch_processing/ParseSingleExample_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/key_image/class/label"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_2/ParseExample/key_image/class/label"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/key_image/class/text"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_1"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_2/ParseExample/key_image/class/text"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/key_image/encoded"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_2"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_2/ParseExample/key_image/encoded"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/label"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/text"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/encoded"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample"
  op: "ParseExample"
  input: "batch_processing/ParseSingleExample_2/ExpandDims"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/names"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_0"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_1"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_2"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/sparse_keys_3"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_0"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_1"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample/dense_keys_2"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_1"
  input: "batch_processing/ParseSingleExample_2/ParseExample/Reshape_2"
  attr {
    key: "Ndense"
    value {
      i: 3
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 4
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_image/class/label"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_image/class/text"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_image/encoded"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:14"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:8"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:1"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:9"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:2"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:10"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:3"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_2/Slice_Indices_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:11"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_2/Squeeze_Shape_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Cast_2"
  op: "Cast"
  input: "batch_processing/ParseSingleExample_2/Squeeze_image/class/label"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_10/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_10"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:5"
  input: "batch_processing/ExpandDims_10/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_11/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_11"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:7"
  input: "batch_processing/ExpandDims_11/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_12/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_12"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:4"
  input: "batch_processing/ExpandDims_12/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_13/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_13"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_2/ParseExample/ParseExample:6"
  input: "batch_processing/ExpandDims_13/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/concat_2"
  op: "Concat"
  input: "batch_processing/concat_2/concat_dim"
  input: "batch_processing/ExpandDims_11"
  input: "batch_processing/ExpandDims_10"
  input: "batch_processing/ExpandDims_13"
  input: "batch_processing/ExpandDims_12"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_14/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_14"
  op: "ExpandDims"
  input: "batch_processing/concat_2"
  input: "batch_processing/ExpandDims_14/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/transpose_2"
  op: "Transpose"
  input: "batch_processing/ExpandDims_14"
  input: "batch_processing/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_2/DecodeJpeg"
  op: "DecodeJpeg"
  input: "batch_processing/ParseSingleExample_2/Squeeze_image/encoded"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/decode_jpg_2/convert_image/Cast"
  op: "Cast"
  input: "batch_processing/decode_jpg_2/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_2/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_2/convert_image"
  op: "Mul"
  input: "batch_processing/decode_jpg_2/convert_image/Cast"
  input: "batch_processing/decode_jpg_2/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Shape"
  op: "Shape"
  input: "batch_processing/decode_jpg_2/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/assert_less/Less"
  op: "Less"
  input: "batch_processing/eval_image_2/assert_positive/Const"
  input: "batch_processing/eval_image_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/assert_less/All"
  op: "All"
  input: "batch_processing/eval_image_2/assert_positive/assert_less/Less"
  input: "batch_processing/eval_image_2/assert_positive/assert_less/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/assert_less/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/assert_positive/assert_less/Assert"
  op: "Assert"
  input: "batch_processing/eval_image_2/assert_positive/assert_less/All"
  input: "batch_processing/eval_image_2/assert_positive/assert_less/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Shape_1"
  op: "Shape"
  input: "batch_processing/decode_jpg_2/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice"
  op: "StridedSlice"
  input: "batch_processing/eval_image_2/Shape_1"
  input: "batch_processing/eval_image_2/strided_slice/pack"
  input: "batch_processing/eval_image_2/strided_slice/pack_1"
  input: "batch_processing/eval_image_2/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Div"
  op: "Div"
  input: "batch_processing/eval_image_2/strided_slice"
  input: "batch_processing/eval_image_2/Div/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_1"
  op: "StridedSlice"
  input: "batch_processing/eval_image_2/Shape_1"
  input: "batch_processing/eval_image_2/strided_slice_1/pack"
  input: "batch_processing/eval_image_2/strided_slice_1/pack_1"
  input: "batch_processing/eval_image_2/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Div_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Div_1"
  op: "Div"
  input: "batch_processing/eval_image_2/strided_slice_1"
  input: "batch_processing/eval_image_2/Div_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_2"
  op: "StridedSlice"
  input: "batch_processing/eval_image_2/Shape_1"
  input: "batch_processing/eval_image_2/strided_slice_2/pack"
  input: "batch_processing/eval_image_2/strided_slice_2/pack_1"
  input: "batch_processing/eval_image_2/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_2/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/mul"
  op: "Mul"
  input: "batch_processing/eval_image_2/Div"
  input: "batch_processing/eval_image_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/sub"
  op: "Sub"
  input: "batch_processing/eval_image_2/strided_slice_2"
  input: "batch_processing/eval_image_2/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/strided_slice_3"
  op: "StridedSlice"
  input: "batch_processing/eval_image_2/Shape_1"
  input: "batch_processing/eval_image_2/strided_slice_3/pack"
  input: "batch_processing/eval_image_2/strided_slice_3/pack_1"
  input: "batch_processing/eval_image_2/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_2/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/mul_1"
  op: "Mul"
  input: "batch_processing/eval_image_2/Div_1"
  input: "batch_processing/eval_image_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/sub_1"
  op: "Sub"
  input: "batch_processing/eval_image_2/strided_slice_3"
  input: "batch_processing/eval_image_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/pack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/pack"
  op: "Pack"
  input: "batch_processing/eval_image_2/Div"
  input: "batch_processing/eval_image_2/Div_1"
  input: "batch_processing/eval_image_2/pack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_2/pack_1/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/pack_1"
  op: "Pack"
  input: "batch_processing/eval_image_2/sub"
  input: "batch_processing/eval_image_2/sub_1"
  input: "batch_processing/eval_image_2/pack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Slice"
  op: "Slice"
  input: "batch_processing/decode_jpg_2/convert_image"
  input: "batch_processing/eval_image_2/pack"
  input: "batch_processing/eval_image_2/pack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/eval_image_2/Slice"
  input: "batch_processing/eval_image_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/ResizeBilinear/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\001\000\000+\001\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_2/ResizeBilinear"
  op: "ResizeBilinear"
  input: "batch_processing/eval_image_2/ExpandDims"
  input: "batch_processing/eval_image_2/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_2/Squeeze"
  op: "Squeeze"
  input: "batch_processing/eval_image_2/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "batch_processing/Sub_2"
  op: "Sub"
  input: "batch_processing/eval_image_2/Squeeze"
  input: "batch_processing/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "batch_processing/Mul_2"
  op: "Mul"
  input: "batch_processing/Sub_2"
  input: "batch_processing/Mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/ReaderRead:1"
  input: "batch_processing/ParseSingleExample_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/key_image/class/label"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_3/ParseExample/key_image/class/label"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/key_image/class/text"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_1"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_3/ParseExample/key_image/class/text"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/key_image/encoded"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_2"
  op: "Reshape"
  input: "batch_processing/ParseSingleExample_3/ParseExample/key_image/encoded"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/xmin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymax"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/object/bbox/ymin"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/label"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/class/text"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image/encoded"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample"
  op: "ParseExample"
  input: "batch_processing/ParseSingleExample_3/ExpandDims"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/names"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_0"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_1"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_2"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/sparse_keys_3"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_0"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_1"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample/dense_keys_2"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_1"
  input: "batch_processing/ParseSingleExample_3/ParseExample/Reshape_2"
  attr {
    key: "Ndense"
    value {
      i: 3
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 4
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_image/class/label"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:12"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_image/class/text"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:13"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_image/encoded"
  op: "Squeeze"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:14"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:8"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmax/begin"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:1"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:9"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmin/begin"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/xmin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:2"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymax/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymax/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymax"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:10"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymax/begin"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymax/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377"
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:3"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_3/Slice_Indices_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymin/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymin/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymin"
  op: "Slice"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:11"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymin/begin"
  input: "batch_processing/ParseSingleExample_3/Squeeze_Shape_image/object/bbox/ymin/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Cast_3"
  op: "Cast"
  input: "batch_processing/ParseSingleExample_3/Squeeze_image/class/label"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_15/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_15"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:5"
  input: "batch_processing/ExpandDims_15/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_16/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_16"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:7"
  input: "batch_processing/ExpandDims_16/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_17/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_17"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:4"
  input: "batch_processing/ExpandDims_17/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_18/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_18"
  op: "ExpandDims"
  input: "batch_processing/ParseSingleExample_3/ParseExample/ParseExample:6"
  input: "batch_processing/ExpandDims_18/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/concat_3/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/concat_3"
  op: "Concat"
  input: "batch_processing/concat_3/concat_dim"
  input: "batch_processing/ExpandDims_16"
  input: "batch_processing/ExpandDims_15"
  input: "batch_processing/ExpandDims_18"
  input: "batch_processing/ExpandDims_17"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_19/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/ExpandDims_19"
  op: "ExpandDims"
  input: "batch_processing/concat_3"
  input: "batch_processing/ExpandDims_19/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/transpose_3/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/transpose_3"
  op: "Transpose"
  input: "batch_processing/ExpandDims_19"
  input: "batch_processing/transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_3/DecodeJpeg"
  op: "DecodeJpeg"
  input: "batch_processing/ParseSingleExample_3/Squeeze_image/encoded"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 3
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/decode_jpg_3/convert_image/Cast"
  op: "Cast"
  input: "batch_processing/decode_jpg_3/DecodeJpeg"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_3/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "batch_processing/decode_jpg_3/convert_image"
  op: "Mul"
  input: "batch_processing/decode_jpg_3/convert_image/Cast"
  input: "batch_processing/decode_jpg_3/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Shape"
  op: "Shape"
  input: "batch_processing/decode_jpg_3/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/assert_less/Less"
  op: "Less"
  input: "batch_processing/eval_image_3/assert_positive/Const"
  input: "batch_processing/eval_image_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/assert_less/All"
  op: "All"
  input: "batch_processing/eval_image_3/assert_positive/assert_less/Less"
  input: "batch_processing/eval_image_3/assert_positive/assert_less/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/assert_less/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "all dims of \'image.shape\' must be > 0."
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/assert_positive/assert_less/Assert"
  op: "Assert"
  input: "batch_processing/eval_image_3/assert_positive/assert_less/All"
  input: "batch_processing/eval_image_3/assert_positive/assert_less/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Shape_1"
  op: "Shape"
  input: "batch_processing/decode_jpg_3/convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice"
  op: "StridedSlice"
  input: "batch_processing/eval_image_3/Shape_1"
  input: "batch_processing/eval_image_3/strided_slice/pack"
  input: "batch_processing/eval_image_3/strided_slice/pack_1"
  input: "batch_processing/eval_image_3/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Div"
  op: "Div"
  input: "batch_processing/eval_image_3/strided_slice"
  input: "batch_processing/eval_image_3/Div/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_1"
  op: "StridedSlice"
  input: "batch_processing/eval_image_3/Shape_1"
  input: "batch_processing/eval_image_3/strided_slice_1/pack"
  input: "batch_processing/eval_image_3/strided_slice_1/pack_1"
  input: "batch_processing/eval_image_3/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Div_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Div_1"
  op: "Div"
  input: "batch_processing/eval_image_3/strided_slice_1"
  input: "batch_processing/eval_image_3/Div_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_2"
  op: "StridedSlice"
  input: "batch_processing/eval_image_3/Shape_1"
  input: "batch_processing/eval_image_3/strided_slice_2/pack"
  input: "batch_processing/eval_image_3/strided_slice_2/pack_1"
  input: "batch_processing/eval_image_3/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_3/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/mul"
  op: "Mul"
  input: "batch_processing/eval_image_3/Div"
  input: "batch_processing/eval_image_3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/sub"
  op: "Sub"
  input: "batch_processing/eval_image_3/strided_slice_2"
  input: "batch_processing/eval_image_3/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_3/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_3/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_3/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/strided_slice_3"
  op: "StridedSlice"
  input: "batch_processing/eval_image_3/Shape_1"
  input: "batch_processing/eval_image_3/strided_slice_3/pack"
  input: "batch_processing/eval_image_3/strided_slice_3/pack_1"
  input: "batch_processing/eval_image_3/strided_slice_3/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_processing/eval_image_3/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/mul_1"
  op: "Mul"
  input: "batch_processing/eval_image_3/Div_1"
  input: "batch_processing/eval_image_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/sub_1"
  op: "Sub"
  input: "batch_processing/eval_image_3/strided_slice_3"
  input: "batch_processing/eval_image_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/pack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/pack"
  op: "Pack"
  input: "batch_processing/eval_image_3/Div"
  input: "batch_processing/eval_image_3/Div_1"
  input: "batch_processing/eval_image_3/pack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_3/pack_1/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/pack_1"
  op: "Pack"
  input: "batch_processing/eval_image_3/sub"
  input: "batch_processing/eval_image_3/sub_1"
  input: "batch_processing/eval_image_3/pack_1/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Slice"
  op: "Slice"
  input: "batch_processing/decode_jpg_3/convert_image"
  input: "batch_processing/eval_image_3/pack"
  input: "batch_processing/eval_image_3/pack_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/ExpandDims"
  op: "ExpandDims"
  input: "batch_processing/eval_image_3/Slice"
  input: "batch_processing/eval_image_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/ResizeBilinear/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\001\000\000+\001\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/eval_image_3/ResizeBilinear"
  op: "ResizeBilinear"
  input: "batch_processing/eval_image_3/ExpandDims"
  input: "batch_processing/eval_image_3/ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/eval_image_3/Squeeze"
  op: "Squeeze"
  input: "batch_processing/eval_image_3/ResizeBilinear"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_processing/Sub_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "batch_processing/Sub_3"
  op: "Sub"
  input: "batch_processing/eval_image_3/Squeeze"
  input: "batch_processing/Sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/Mul_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "batch_processing/Mul_3"
  op: "Mul"
  input: "batch_processing/Sub_3"
  input: "batch_processing/Mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 400
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_enqueue"
  op: "QueueEnqueue"
  input: "batch_processing/batch_join/fifo_queue"
  input: "batch_processing/Mul"
  input: "batch_processing/Cast"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_enqueue_1"
  op: "QueueEnqueue"
  input: "batch_processing/batch_join/fifo_queue"
  input: "batch_processing/Mul_1"
  input: "batch_processing/Cast_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_enqueue_2"
  op: "QueueEnqueue"
  input: "batch_processing/batch_join/fifo_queue"
  input: "batch_processing/Mul_2"
  input: "batch_processing/Cast_2"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_enqueue_3"
  op: "QueueEnqueue"
  input: "batch_processing/batch_join/fifo_queue"
  input: "batch_processing/Mul_3"
  input: "batch_processing/Cast_3"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_Close"
  op: "QueueClose"
  input: "batch_processing/batch_join/fifo_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_Close_1"
  op: "QueueClose"
  input: "batch_processing/batch_join/fifo_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch_processing/batch_join/fifo_queue_Size"
  op: "QueueSize"
  input: "batch_processing/batch_join/fifo_queue"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/Cast"
  op: "Cast"
  input: "batch_processing/batch_join/fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00249999994412
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/mul"
  op: "Mul"
  input: "batch_processing/batch_join/Cast"
  input: "batch_processing/batch_join/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/batch_processing/batch_join/fifo_queue/fraction_of_400_full"
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/ScalarSummary"
  op: "ScalarSummary"
  input: "batch_processing/batch_join/ScalarSummary/tags"
  input: "batch_processing/batch_join/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_processing/batch_join/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "batch_processing/batch_join"
  op: "QueueDequeueMany"
  input: "batch_processing/batch_join/fifo_queue"
  input: "batch_processing/batch_join/n"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_processing/batch_join/fifo_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch_processing/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\031\000\000\000+\001\000\000+\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "batch_processing/Reshape"
  op: "Reshape"
  input: "batch_processing/batch_join"
  input: "batch_processing/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 299
          }
          dim {
            size: 299
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "batch_processing/ImageSummary/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "images"
      }
    }
  }
}
node {
  name: "batch_processing/ImageSummary"
  op: "ImageSummary"
  input: "batch_processing/ImageSummary/tag"
  input: "batch_processing/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "batch_processing/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "batch_processing/Reshape_1"
  op: "Reshape"
  input: "batch_processing/batch_join:1"
  input: "batch_processing/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "OneHotEncoding/ToInt64"
  op: "Cast"
  input: "batch_processing/Reshape_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1001
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OneHotEncoding/one_hot"
  op: "OneHot"
  input: "OneHotEncoding/ToInt64"
  input: "OneHotEncoding/one_hot/depth"
  input: "OneHotEncoding/one_hot/on_value"
  input: "OneHotEncoding/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "resnet_v2_50/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/Pad"
  op: "Pad"
  input: "batch_processing/Reshape"
  input: "resnet_v2_50/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 305
          }
          dim {
            size: 305
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.132992759347
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/conv1/weights"
  input: "resnet_v2_50/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/Pad"
  input: "resnet_v2_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/conv1/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/conv1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/conv1/biases"
  input: "resnet_v2_50/conv1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/conv1/biases/read"
  op: "Identity"
  input: "resnet_v2_50/conv1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/conv1/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/conv1/Conv2D"
  input: "resnet_v2_50/conv1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/pool1/MaxPool"
  op: "MaxPool"
  input: "resnet_v2_50/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/pool1/MaxPool"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.201556444168
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.201556444168
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0671854838729
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.201556444168
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_1/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/BiasAdd"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0671854838729
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.201556444168
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_2/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/Pad"
  op: "Pad"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 77
          }
          dim {
            size: 77
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0671854838729
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/Pad"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.201556444168
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block1/unit_3/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/shortcut/MaxPool"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0475073084235
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_1/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/BiasAdd"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0475073084235
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_2/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0475073084235
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_3/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/Pad"
  op: "Pad"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 40
          }
          dim {
            size: 40
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0475073084235
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/Pad"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block2/unit_4/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/shortcut/MaxPool"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_1/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/BiasAdd"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_2/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_3/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_4/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_5/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/Pad"
  op: "Pad"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 21
          }
          dim {
            size: 21
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0335927419364
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/Pad"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.100778222084
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block3/unit_6/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/shortcut/MaxPool"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0237536542118
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_1/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/BiasAdd"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831803
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0237536542118
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_2/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831803
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0237536542118
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/read"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/mul_1"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/Relu"
  op: "Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0712609663606
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/Relu"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/read"
  op: "Identity"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/Conv2D"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/block4/unit_3/bottleneck_v2/add"
  op: "Add"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/add"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/beta"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/beta/Assign"
  op: "Assign"
  input: "resnet_v2_50/postnorm/beta"
  input: "resnet_v2_50/postnorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/beta/read"
  op: "Identity"
  input: "resnet_v2_50/postnorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/gamma"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v2_50/postnorm/gamma"
  input: "resnet_v2_50/postnorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/gamma/read"
  op: "Identity"
  input: "resnet_v2_50/postnorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_mean"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v2_50/postnorm/moving_mean"
  input: "resnet_v2_50/postnorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v2_50/postnorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_variance"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v2_50/postnorm/moving_variance"
  input: "resnet_v2_50/postnorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v2_50/postnorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/add"
  op: "Add"
  input: "resnet_v2_50/postnorm/moving_variance/read"
  input: "resnet_v2_50/postnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "resnet_v2_50/postnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/mul"
  op: "Mul"
  input: "resnet_v2_50/postnorm/batchnorm/Rsqrt"
  input: "resnet_v2_50/postnorm/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/mul_1"
  op: "Mul"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/add"
  input: "resnet_v2_50/postnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/mul_2"
  op: "Mul"
  input: "resnet_v2_50/postnorm/moving_mean/read"
  input: "resnet_v2_50/postnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/sub"
  op: "Sub"
  input: "resnet_v2_50/postnorm/beta/read"
  input: "resnet_v2_50/postnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/batchnorm/add_1"
  op: "Add"
  input: "resnet_v2_50/postnorm/batchnorm/mul_1"
  input: "resnet_v2_50/postnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/postnorm/Relu"
  op: "Relu"
  input: "resnet_v2_50/postnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/pool5/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/pool5"
  op: "Mean"
  input: "resnet_v2_50/postnorm/Relu"
  input: "resnet_v2_50/pool5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\351\003\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831803
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal/mul"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Assign"
  op: "Assign"
  input: "resnet_v2_50/logits/weights"
  input: "resnet_v2_50/logits/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/read"
  op: "Identity"
  input: "resnet_v2_50/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Regularizer/L2Regularizer/weight"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-05
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Regularizer/L2Regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v2_50/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/weights/Regularizer/L2Regularizer/value"
  op: "Mul"
  input: "resnet_v2_50/logits/weights/Regularizer/L2Regularizer/weight"
  input: "resnet_v2_50/logits/weights/Regularizer/L2Regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/Conv2D"
  op: "Conv2D"
  input: "resnet_v2_50/pool5"
  input: "resnet_v2_50/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/logits/biases"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v2_50/logits/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1001
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/biases/Assign"
  op: "Assign"
  input: "resnet_v2_50/logits/biases"
  input: "resnet_v2_50/logits/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v2_50/logits/biases/read"
  op: "Identity"
  input: "resnet_v2_50/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/logits/BiasAdd"
  op: "BiasAdd"
  input: "resnet_v2_50/logits/Conv2D"
  input: "resnet_v2_50/logits/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "resnet_v2_50/predictions/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\351\003\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/predictions/Reshape"
  op: "Reshape"
  input: "resnet_v2_50/logits/BiasAdd"
  input: "resnet_v2_50/predictions/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/predictions/Softmax"
  op: "Softmax"
  input: "resnet_v2_50/predictions/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "resnet_v2_50/predictions/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000\001\000\000\000\351\003\000\000"
      }
    }
  }
}
node {
  name: "resnet_v2_50/predictions/Reshape_1"
  op: "Reshape"
  input: "resnet_v2_50/predictions/Softmax"
  input: "resnet_v2_50/predictions/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
}
node {
  name: "SpatialSqueeze"
  op: "Squeeze"
  input: "resnet_v2_50/predictions/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "SpatialSqueeze"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "OneHotEncoding/one_hot"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/total"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "accuracy/total/Assign"
  op: "Assign"
  input: "accuracy/total"
  input: "accuracy/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/total/read"
  op: "Identity"
  input: "accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/count"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "accuracy/count/Assign"
  op: "Assign"
  input: "accuracy/count"
  input: "accuracy/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/count/read"
  op: "Identity"
  input: "accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "accuracy/ToFloat_1"
  op: "Cast"
  input: "accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/Sum"
  op: "Sum"
  input: "ToFloat"
  input: "accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/AssignAdd"
  op: "AssignAdd"
  input: "accuracy/total"
  input: "accuracy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "accuracy/count"
  input: "accuracy/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/Greater"
  op: "Greater"
  input: "accuracy/count/read"
  input: "accuracy/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Div"
  op: "Div"
  input: "accuracy/total/read"
  input: "accuracy/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/value"
  op: "Select"
  input: "accuracy/Greater"
  input: "accuracy/Div"
  input: "accuracy/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Greater_1/y"
  op: "Const"
  input: "^accuracy/AssignAdd"
  input: "^accuracy/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/Greater_1"
  op: "Greater"
  input: "accuracy/count/read"
  input: "accuracy/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/Div_1"
  op: "Div"
  input: "accuracy/total/read"
  input: "accuracy/count/read"
  input: "^accuracy/AssignAdd"
  input: "^accuracy/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/update_op/e"
  op: "Const"
  input: "^accuracy/AssignAdd"
  input: "^accuracy/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "accuracy/update_op"
  op: "Select"
  input: "accuracy/Greater_1"
  input: "accuracy/Div_1"
  input: "accuracy/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InTopK"
  op: "InTopK"
  input: "SpatialSqueeze"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "k"
    value {
      i: 5
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "InTopK"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "recall_at_5/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/total"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recall_at_5/total/Assign"
  op: "Assign"
  input: "recall_at_5/total"
  input: "recall_at_5/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recall_at_5/total/read"
  op: "Identity"
  input: "recall_at_5/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/count"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recall_at_5/count/Assign"
  op: "Assign"
  input: "recall_at_5/count"
  input: "recall_at_5/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recall_at_5/count/read"
  op: "Identity"
  input: "recall_at_5/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "recall_at_5/ToFloat_1"
  op: "Cast"
  input: "recall_at_5/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "recall_at_5/Sum"
  op: "Sum"
  input: "ToFloat_1"
  input: "recall_at_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "recall_at_5/AssignAdd"
  op: "AssignAdd"
  input: "recall_at_5/total"
  input: "recall_at_5/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "recall_at_5/AssignAdd_1"
  op: "AssignAdd"
  input: "recall_at_5/count"
  input: "recall_at_5/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "recall_at_5/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/Greater"
  op: "Greater"
  input: "recall_at_5/count/read"
  input: "recall_at_5/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/Div"
  op: "Div"
  input: "recall_at_5/total/read"
  input: "recall_at_5/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/value"
  op: "Select"
  input: "recall_at_5/Greater"
  input: "recall_at_5/Div"
  input: "recall_at_5/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/Greater_1/y"
  op: "Const"
  input: "^recall_at_5/AssignAdd"
  input: "^recall_at_5/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/Greater_1"
  op: "Greater"
  input: "recall_at_5/count/read"
  input: "recall_at_5/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/Div_1"
  op: "Div"
  input: "recall_at_5/total/read"
  input: "recall_at_5/count/read"
  input: "^recall_at_5/AssignAdd"
  input: "^recall_at_5/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall_at_5/update_op/e"
  op: "Const"
  input: "^recall_at_5/AssignAdd"
  input: "^recall_at_5/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall_at_5/update_op"
  op: "Select"
  input: "recall_at_5/Greater_1"
  input: "recall_at_5/Div_1"
  input: "recall_at_5/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "eval/Accuracy"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "accuracy/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Print"
  op: "Print"
  input: "ScalarSummary"
  input: "accuracy/value"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "U"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "first_n"
    value {
      i: -1
    }
  }
  attr {
    key: "message"
    value {
      s: "eval/Accuracy"
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "eval/Recall@5"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "recall_at_5/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Print_1"
  op: "Print"
  input: "ScalarSummary_1"
  input: "recall_at_5/value"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "U"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "first_n"
    value {
      i: -1
    }
  }
  attr {
    key: "message"
    value {
      s: "eval/Recall@5"
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "batch_processing/filename_queue/ScalarSummary"
  input: "batch_processing/ScalarSummary"
  input: "batch_processing/batch_join/ScalarSummary"
  input: "batch_processing/ImageSummary"
  input: "Print"
  input: "Print_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^resnet_v2_50/conv1/weights/Assign"
  input: "^resnet_v2_50/conv1/biases/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/Assign"
  input: "^resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/Assign"
  input: "^resnet_v2_50/postnorm/beta/Assign"
  input: "^resnet_v2_50/postnorm/gamma/Assign"
  input: "^resnet_v2_50/postnorm/moving_mean/Assign"
  input: "^resnet_v2_50/postnorm/moving_variance/Assign"
  input: "^resnet_v2_50/logits/weights/Assign"
  input: "^resnet_v2_50/logits/biases/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^accuracy/total/Assign"
  input: "^accuracy/count/Assign"
  input: "^recall_at_5/total/Assign"
  input: "^recall_at_5/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 273
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 273
          }
        }
        string_val: "global_step"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
        string_val: "resnet_v2_50/conv1/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/conv1/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/logits/biases/ExponentialMovingAverage"
        string_val: "resnet_v2_50/logits/weights/ExponentialMovingAverage"
        string_val: "resnet_v2_50/postnorm/beta/ExponentialMovingAverage"
        string_val: "resnet_v2_50/postnorm/gamma/ExponentialMovingAverage"
        string_val: "resnet_v2_50/postnorm/moving_mean/ExponentialMovingAverage"
        string_val: "resnet_v2_50/postnorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 273
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 273
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "global_step"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  input: "resnet_v2_50/conv1/biases"
  input: "resnet_v2_50/conv1/weights"
  input: "resnet_v2_50/logits/biases"
  input: "resnet_v2_50/logits/weights"
  input: "resnet_v2_50/postnorm/beta"
  input: "resnet_v2_50/postnorm/gamma"
  input: "resnet_v2_50/postnorm/moving_mean"
  input: "resnet_v2_50/postnorm/moving_variance"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_23/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_23/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_23"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_23/tensor_name"
  input: "save/restore_slice_23/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_24/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_24/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_24"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_24/tensor_name"
  input: "save/restore_slice_24/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_25/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_25/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_25"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_25/tensor_name"
  input: "save/restore_slice_25/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_26/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_26/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_26"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_26/tensor_name"
  input: "save/restore_slice_26/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_27/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_27/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_27"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_27/tensor_name"
  input: "save/restore_slice_27/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_28/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_28/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_28"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_28/tensor_name"
  input: "save/restore_slice_28/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_29/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_29/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_29"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_29/tensor_name"
  input: "save/restore_slice_29/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_30/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_30/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_30"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_30/tensor_name"
  input: "save/restore_slice_30/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_31/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_31/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_31"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_31/tensor_name"
  input: "save/restore_slice_31/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  input: "save/restore_slice_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_32/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_32/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_32"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_32/tensor_name"
  input: "save/restore_slice_32/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_33/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_33/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_33"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_33/tensor_name"
  input: "save/restore_slice_33/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_34/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_34/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_34"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_34/tensor_name"
  input: "save/restore_slice_34/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_35/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_35/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_35"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_35/tensor_name"
  input: "save/restore_slice_35/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_36/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_36/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_36"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_36/tensor_name"
  input: "save/restore_slice_36/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_37/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_37/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_37"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_37/tensor_name"
  input: "save/restore_slice_37/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_38/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_38/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_38"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_38/tensor_name"
  input: "save/restore_slice_38/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_39/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_39/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_39"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_39/tensor_name"
  input: "save/restore_slice_39/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_40/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_40/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_40"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_40/tensor_name"
  input: "save/restore_slice_40/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_41/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_41/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_41"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_41/tensor_name"
  input: "save/restore_slice_41/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_42/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_42/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_42"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_42/tensor_name"
  input: "save/restore_slice_42/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_43/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_43/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_43"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_43/tensor_name"
  input: "save/restore_slice_43/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_44/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_44/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_44"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_44/tensor_name"
  input: "save/restore_slice_44/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_45/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_45/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_45"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_45/tensor_name"
  input: "save/restore_slice_45/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_46/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_46/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_46"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_46/tensor_name"
  input: "save/restore_slice_46/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_47/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_47/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_47"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_47/tensor_name"
  input: "save/restore_slice_47/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  input: "save/restore_slice_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_48/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_48/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_48"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_48/tensor_name"
  input: "save/restore_slice_48/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_49/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_49/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_49"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_49/tensor_name"
  input: "save/restore_slice_49/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_50/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_50/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_50"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_50/tensor_name"
  input: "save/restore_slice_50/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_51/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_51/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_51"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_51/tensor_name"
  input: "save/restore_slice_51/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_52/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_52/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_52"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_52/tensor_name"
  input: "save/restore_slice_52/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_53/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_53/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_53"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_53/tensor_name"
  input: "save/restore_slice_53/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_54/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_54/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_54"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_54/tensor_name"
  input: "save/restore_slice_54/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_55/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_55/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_55"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_55/tensor_name"
  input: "save/restore_slice_55/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_56/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_56/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_56"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_56/tensor_name"
  input: "save/restore_slice_56/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_57/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_57/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_57"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_57/tensor_name"
  input: "save/restore_slice_57/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_58/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_58/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_58"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_58/tensor_name"
  input: "save/restore_slice_58/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_59/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_59/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_59"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_59/tensor_name"
  input: "save/restore_slice_59/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_60/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_60/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_60"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_60/tensor_name"
  input: "save/restore_slice_60/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_61/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_61/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_61"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_61/tensor_name"
  input: "save/restore_slice_61/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_62/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_62/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_62"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_62/tensor_name"
  input: "save/restore_slice_62/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_63/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_63/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_63"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_63/tensor_name"
  input: "save/restore_slice_63/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  input: "save/restore_slice_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_64/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_64/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_64"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_64/tensor_name"
  input: "save/restore_slice_64/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_65/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_65/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_65"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_65/tensor_name"
  input: "save/restore_slice_65/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_66/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_66/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_66"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_66/tensor_name"
  input: "save/restore_slice_66/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_67/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_67/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_67"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_67/tensor_name"
  input: "save/restore_slice_67/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  input: "save/restore_slice_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_68/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_68/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_68"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_68/tensor_name"
  input: "save/restore_slice_68/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  input: "save/restore_slice_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_69/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_69/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_69"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_69/tensor_name"
  input: "save/restore_slice_69/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_70/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_70/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_70"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_70/tensor_name"
  input: "save/restore_slice_70/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_71/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_71/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_71"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_71/tensor_name"
  input: "save/restore_slice_71/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_72/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_72/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_72"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_72/tensor_name"
  input: "save/restore_slice_72/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_73/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_73/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_73"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_73/tensor_name"
  input: "save/restore_slice_73/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_74/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_74/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_74"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_74/tensor_name"
  input: "save/restore_slice_74/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_75/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_75/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_75"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_75/tensor_name"
  input: "save/restore_slice_75/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_76/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_76/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_76"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_76/tensor_name"
  input: "save/restore_slice_76/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_77/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_77/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_77"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_77/tensor_name"
  input: "save/restore_slice_77/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_78/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_78/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_78"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_78/tensor_name"
  input: "save/restore_slice_78/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_79/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_79/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_79"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_79/tensor_name"
  input: "save/restore_slice_79/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_80/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_80/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_80"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_80/tensor_name"
  input: "save/restore_slice_80/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_81/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_81/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_81"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_81/tensor_name"
  input: "save/restore_slice_81/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  input: "save/restore_slice_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_82/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_82/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_82"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_82/tensor_name"
  input: "save/restore_slice_82/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_83/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_83/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_83"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_83/tensor_name"
  input: "save/restore_slice_83/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_84/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_84/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_84"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_84/tensor_name"
  input: "save/restore_slice_84/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_85/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_85/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_85"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_85/tensor_name"
  input: "save/restore_slice_85/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_86/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_86/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_86"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_86/tensor_name"
  input: "save/restore_slice_86/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_87/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_87/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_87"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_87/tensor_name"
  input: "save/restore_slice_87/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_88/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_88/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_88"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_88/tensor_name"
  input: "save/restore_slice_88/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_89/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_89/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_89"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_89/tensor_name"
  input: "save/restore_slice_89/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_90/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_90/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_90"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_90/tensor_name"
  input: "save/restore_slice_90/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_91/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_91/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_91"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_91/tensor_name"
  input: "save/restore_slice_91/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_92/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_92/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_92"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_92/tensor_name"
  input: "save/restore_slice_92/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_93/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_93/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_93"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_93/tensor_name"
  input: "save/restore_slice_93/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_94/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_94/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_94"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_94/tensor_name"
  input: "save/restore_slice_94/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_95/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_95/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_95"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_95/tensor_name"
  input: "save/restore_slice_95/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_96/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_96/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_96"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_96/tensor_name"
  input: "save/restore_slice_96/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_97/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_97/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_97"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_97/tensor_name"
  input: "save/restore_slice_97/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  input: "save/restore_slice_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_98/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_98/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_98"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_98/tensor_name"
  input: "save/restore_slice_98/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_99/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_99/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_99"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_99/tensor_name"
  input: "save/restore_slice_99/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_100/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_100/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_100"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_100/tensor_name"
  input: "save/restore_slice_100/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_101/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_101/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_101"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_101/tensor_name"
  input: "save/restore_slice_101/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_102/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_102/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_102"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_102/tensor_name"
  input: "save/restore_slice_102/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_103/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_103/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_103"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_103/tensor_name"
  input: "save/restore_slice_103/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_104/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_104/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_104"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_104/tensor_name"
  input: "save/restore_slice_104/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_105/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_105/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_105"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_105/tensor_name"
  input: "save/restore_slice_105/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_106/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_106/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_106"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_106/tensor_name"
  input: "save/restore_slice_106/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_107/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_107/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_107"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_107/tensor_name"
  input: "save/restore_slice_107/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_108/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_108/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_108"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_108/tensor_name"
  input: "save/restore_slice_108/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_109/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_109/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_109"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_109/tensor_name"
  input: "save/restore_slice_109/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_110/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_110/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_110"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_110/tensor_name"
  input: "save/restore_slice_110/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_111/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_111/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_111"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_111/tensor_name"
  input: "save/restore_slice_111/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_112/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_112/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_112"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_112/tensor_name"
  input: "save/restore_slice_112/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_113/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_113/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_113"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_113/tensor_name"
  input: "save/restore_slice_113/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  input: "save/restore_slice_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_114/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_114/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_114"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_114/tensor_name"
  input: "save/restore_slice_114/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_115/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_115/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_115"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_115/tensor_name"
  input: "save/restore_slice_115/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_116/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_116/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_116"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_116/tensor_name"
  input: "save/restore_slice_116/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_117/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_117/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_117"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_117/tensor_name"
  input: "save/restore_slice_117/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_118/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_118/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_118"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_118/tensor_name"
  input: "save/restore_slice_118/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_119/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_119/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_119"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_119/tensor_name"
  input: "save/restore_slice_119/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_120/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_120/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_120"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_120/tensor_name"
  input: "save/restore_slice_120/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_121/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_121/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_121"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_121/tensor_name"
  input: "save/restore_slice_121/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_122/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_122/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_122"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_122/tensor_name"
  input: "save/restore_slice_122/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_123/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_123/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_123"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_123/tensor_name"
  input: "save/restore_slice_123/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_124/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_124/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_124"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_124/tensor_name"
  input: "save/restore_slice_124/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_125/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_125/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_125"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_125/tensor_name"
  input: "save/restore_slice_125/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_126/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_126/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_126"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_126/tensor_name"
  input: "save/restore_slice_126/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_127/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_127/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_127"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_127/tensor_name"
  input: "save/restore_slice_127/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_128/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_128/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_128"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_128/tensor_name"
  input: "save/restore_slice_128/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_129/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_129/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_129"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_129/tensor_name"
  input: "save/restore_slice_129/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  input: "save/restore_slice_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_130/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_130/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_130"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_130/tensor_name"
  input: "save/restore_slice_130/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_131/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_131/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_131"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_131/tensor_name"
  input: "save/restore_slice_131/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_132/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_132/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_132"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_132/tensor_name"
  input: "save/restore_slice_132/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_133/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_133/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_133"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_133/tensor_name"
  input: "save/restore_slice_133/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  input: "save/restore_slice_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_134/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_134/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_134"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_134/tensor_name"
  input: "save/restore_slice_134/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  input: "save/restore_slice_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_135/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_135/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_135"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_135/tensor_name"
  input: "save/restore_slice_135/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_136/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_136/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_136"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_136/tensor_name"
  input: "save/restore_slice_136/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_137/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_137/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_137"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_137/tensor_name"
  input: "save/restore_slice_137/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_138/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_138/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_138"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_138/tensor_name"
  input: "save/restore_slice_138/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_139/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_139/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_139"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_139/tensor_name"
  input: "save/restore_slice_139/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_140/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_140/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_140"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_140/tensor_name"
  input: "save/restore_slice_140/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_141/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_141/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_141"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_141/tensor_name"
  input: "save/restore_slice_141/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_142/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_142/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_142"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_142/tensor_name"
  input: "save/restore_slice_142/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_143/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_143/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_143"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_143/tensor_name"
  input: "save/restore_slice_143/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_144/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_144/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_144"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_144/tensor_name"
  input: "save/restore_slice_144/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_145/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_145/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_145"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_145/tensor_name"
  input: "save/restore_slice_145/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_146/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_146/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_146"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_146/tensor_name"
  input: "save/restore_slice_146/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_147/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_147/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_147"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_147/tensor_name"
  input: "save/restore_slice_147/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  input: "save/restore_slice_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_148/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_148/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_148"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_148/tensor_name"
  input: "save/restore_slice_148/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_149/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_149/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_149"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_149/tensor_name"
  input: "save/restore_slice_149/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_150/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_150/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_150"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_150/tensor_name"
  input: "save/restore_slice_150/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_151/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_151/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_151"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_151/tensor_name"
  input: "save/restore_slice_151/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_152/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_152/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_152"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_152/tensor_name"
  input: "save/restore_slice_152/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_153/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_153/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_153"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_153/tensor_name"
  input: "save/restore_slice_153/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_154/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_154/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_154"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_154/tensor_name"
  input: "save/restore_slice_154/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_155/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_155/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_155"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_155/tensor_name"
  input: "save/restore_slice_155/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_156/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_156/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_156"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_156/tensor_name"
  input: "save/restore_slice_156/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_157/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_157/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_157"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_157/tensor_name"
  input: "save/restore_slice_157/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_158/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_158/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_158"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_158/tensor_name"
  input: "save/restore_slice_158/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_159/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_159/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_159"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_159/tensor_name"
  input: "save/restore_slice_159/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_160/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_160/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_160"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_160/tensor_name"
  input: "save/restore_slice_160/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_161/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_161/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_161"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_161/tensor_name"
  input: "save/restore_slice_161/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_162/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_162/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_162"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_162/tensor_name"
  input: "save/restore_slice_162/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_163/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_163/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_163"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_163/tensor_name"
  input: "save/restore_slice_163/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  input: "save/restore_slice_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_164/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_164/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_164"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_164/tensor_name"
  input: "save/restore_slice_164/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_165/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_165/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_165"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_165/tensor_name"
  input: "save/restore_slice_165/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_166/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_166/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_166"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_166/tensor_name"
  input: "save/restore_slice_166/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_167/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_167/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_167"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_167/tensor_name"
  input: "save/restore_slice_167/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_168/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_168/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_168"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_168/tensor_name"
  input: "save/restore_slice_168/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_169/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_169/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_169"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_169/tensor_name"
  input: "save/restore_slice_169/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_170/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_170/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_170"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_170/tensor_name"
  input: "save/restore_slice_170/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_171/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_171/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_171"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_171/tensor_name"
  input: "save/restore_slice_171/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_172/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_172/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_172"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_172/tensor_name"
  input: "save/restore_slice_172/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_173/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_173/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_173"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_173/tensor_name"
  input: "save/restore_slice_173/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_174/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_174/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_174"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_174/tensor_name"
  input: "save/restore_slice_174/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_175/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_175/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_175"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_175/tensor_name"
  input: "save/restore_slice_175/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_176/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_176/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_176"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_176/tensor_name"
  input: "save/restore_slice_176/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_177/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_177/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_177"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_177/tensor_name"
  input: "save/restore_slice_177/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_178/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_178/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_178"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_178/tensor_name"
  input: "save/restore_slice_178/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_179/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_179/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_179"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_179/tensor_name"
  input: "save/restore_slice_179/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  input: "save/restore_slice_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_180/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_180/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_180"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_180/tensor_name"
  input: "save/restore_slice_180/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_181/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_181/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_181"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_181/tensor_name"
  input: "save/restore_slice_181/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_182/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_182/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_182"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_182/tensor_name"
  input: "save/restore_slice_182/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_183/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_183/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_183"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_183/tensor_name"
  input: "save/restore_slice_183/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_184/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_184/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_184"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_184/tensor_name"
  input: "save/restore_slice_184/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_185/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_185/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_185"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_185/tensor_name"
  input: "save/restore_slice_185/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_186/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_186/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_186"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_186/tensor_name"
  input: "save/restore_slice_186/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_187/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_187/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_187"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_187/tensor_name"
  input: "save/restore_slice_187/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_188/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_188/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_188"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_188/tensor_name"
  input: "save/restore_slice_188/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_189/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_189/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_189"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_189/tensor_name"
  input: "save/restore_slice_189/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_190/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_190/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_190"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_190/tensor_name"
  input: "save/restore_slice_190/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_191/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_191/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_191"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_191/tensor_name"
  input: "save/restore_slice_191/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_192/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_192/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_192"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_192/tensor_name"
  input: "save/restore_slice_192/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_193/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_193/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_193"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_193/tensor_name"
  input: "save/restore_slice_193/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_194/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_194/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_194"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_194/tensor_name"
  input: "save/restore_slice_194/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_195/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_195/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_195"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_195/tensor_name"
  input: "save/restore_slice_195/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  input: "save/restore_slice_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_196/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_196/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_196"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_196/tensor_name"
  input: "save/restore_slice_196/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_197/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_197/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_197"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_197/tensor_name"
  input: "save/restore_slice_197/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_198/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_198/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_198"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_198/tensor_name"
  input: "save/restore_slice_198/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_199/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_199/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_199"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_199/tensor_name"
  input: "save/restore_slice_199/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_200/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_200/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_200"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_200/tensor_name"
  input: "save/restore_slice_200/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_201/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_201/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_201"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_201/tensor_name"
  input: "save/restore_slice_201/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_202/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_202/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_202"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_202/tensor_name"
  input: "save/restore_slice_202/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_203/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_203/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_203"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_203/tensor_name"
  input: "save/restore_slice_203/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_204/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_204/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_204"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_204/tensor_name"
  input: "save/restore_slice_204/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_205/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_205/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_205"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_205/tensor_name"
  input: "save/restore_slice_205/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_206/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_206/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_206"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_206/tensor_name"
  input: "save/restore_slice_206/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_207/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_207/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_207"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_207/tensor_name"
  input: "save/restore_slice_207/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_208/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_208/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_208"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_208/tensor_name"
  input: "save/restore_slice_208/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_209/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_209/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_209"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_209/tensor_name"
  input: "save/restore_slice_209/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_210/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_210/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_210"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_210/tensor_name"
  input: "save/restore_slice_210/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_211/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_211/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_211"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_211/tensor_name"
  input: "save/restore_slice_211/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  input: "save/restore_slice_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_212/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_212/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_212"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_212/tensor_name"
  input: "save/restore_slice_212/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_213/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_213/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_213"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_213/tensor_name"
  input: "save/restore_slice_213/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_214/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_214/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_214"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_214/tensor_name"
  input: "save/restore_slice_214/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_215/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_215/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_215"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_215/tensor_name"
  input: "save/restore_slice_215/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_216/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_216/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_216"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_216/tensor_name"
  input: "save/restore_slice_216/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_217/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_217/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_217"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_217/tensor_name"
  input: "save/restore_slice_217/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_218/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_218/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_218"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_218/tensor_name"
  input: "save/restore_slice_218/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_219/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_219/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_219"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_219/tensor_name"
  input: "save/restore_slice_219/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_220/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_220/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_220"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_220/tensor_name"
  input: "save/restore_slice_220/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_221/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_221/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_221"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_221/tensor_name"
  input: "save/restore_slice_221/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_222/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_222/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_222"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_222/tensor_name"
  input: "save/restore_slice_222/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_223/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_223/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_223"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_223/tensor_name"
  input: "save/restore_slice_223/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_224/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_224/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_224"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_224/tensor_name"
  input: "save/restore_slice_224/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_225/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_225/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_225"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_225/tensor_name"
  input: "save/restore_slice_225/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_226/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_226/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_226"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_226/tensor_name"
  input: "save/restore_slice_226/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_227/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_227/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_227"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_227/tensor_name"
  input: "save/restore_slice_227/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  input: "save/restore_slice_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_228/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_228/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_228"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_228/tensor_name"
  input: "save/restore_slice_228/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_229/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_229/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_229"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_229/tensor_name"
  input: "save/restore_slice_229/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_230/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_230/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_230"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_230/tensor_name"
  input: "save/restore_slice_230/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_231/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_231/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_231"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_231/tensor_name"
  input: "save/restore_slice_231/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  input: "save/restore_slice_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_232/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_232/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_232"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_232/tensor_name"
  input: "save/restore_slice_232/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  input: "save/restore_slice_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_233/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_233/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_233"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_233/tensor_name"
  input: "save/restore_slice_233/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_234/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_234/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_234"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_234/tensor_name"
  input: "save/restore_slice_234/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_235/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_235/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_235"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_235/tensor_name"
  input: "save/restore_slice_235/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_236/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_236/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_236"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_236/tensor_name"
  input: "save/restore_slice_236/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_237/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_237/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_237"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_237/tensor_name"
  input: "save/restore_slice_237/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_238/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_238/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_238"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_238/tensor_name"
  input: "save/restore_slice_238/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_239/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_239/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_239"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_239/tensor_name"
  input: "save/restore_slice_239/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_240/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_240/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_240"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_240/tensor_name"
  input: "save/restore_slice_240/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_241/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_241/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_241"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_241/tensor_name"
  input: "save/restore_slice_241/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_242/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_242/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_242"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_242/tensor_name"
  input: "save/restore_slice_242/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_243/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_243/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_243"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_243/tensor_name"
  input: "save/restore_slice_243/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_244/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_244/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_244"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_244/tensor_name"
  input: "save/restore_slice_244/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_245/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_245/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_245"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_245/tensor_name"
  input: "save/restore_slice_245/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  input: "save/restore_slice_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_246/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_246/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_246"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_246/tensor_name"
  input: "save/restore_slice_246/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_247/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_247/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_247"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_247/tensor_name"
  input: "save/restore_slice_247/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_248/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_248/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_248"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_248/tensor_name"
  input: "save/restore_slice_248/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_249/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_249/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_249"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_249/tensor_name"
  input: "save/restore_slice_249/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  input: "save/restore_slice_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_250/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_250/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_250"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_250/tensor_name"
  input: "save/restore_slice_250/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  input: "save/restore_slice_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_251/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_251/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_251"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_251/tensor_name"
  input: "save/restore_slice_251/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  input: "save/restore_slice_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_252/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_252/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_252"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_252/tensor_name"
  input: "save/restore_slice_252/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  input: "save/restore_slice_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_253/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_253/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_253"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_253/tensor_name"
  input: "save/restore_slice_253/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  input: "save/restore_slice_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_254/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_254/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_254"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_254/tensor_name"
  input: "save/restore_slice_254/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  input: "save/restore_slice_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_255/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_255/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_255"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_255/tensor_name"
  input: "save/restore_slice_255/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  input: "save/restore_slice_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_256/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_256/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_256"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_256/tensor_name"
  input: "save/restore_slice_256/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  input: "save/restore_slice_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_257/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_257/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_257"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_257/tensor_name"
  input: "save/restore_slice_257/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  input: "save/restore_slice_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_258/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_258/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_258"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_258/tensor_name"
  input: "save/restore_slice_258/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  input: "save/restore_slice_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_259/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_259/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_259"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_259/tensor_name"
  input: "save/restore_slice_259/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  input: "save/restore_slice_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_260/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_260/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_260"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_260/tensor_name"
  input: "save/restore_slice_260/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  input: "save/restore_slice_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_261/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_261/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_261"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_261/tensor_name"
  input: "save/restore_slice_261/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  input: "save/restore_slice_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_262/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_262/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_262"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_262/tensor_name"
  input: "save/restore_slice_262/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  input: "save/restore_slice_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_263/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_263/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_263"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_263/tensor_name"
  input: "save/restore_slice_263/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  input: "save/restore_slice_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_264/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_264/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_264"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_264/tensor_name"
  input: "save/restore_slice_264/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  input: "save/restore_slice_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_265/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/conv1/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_265/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_265"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_265/tensor_name"
  input: "save/restore_slice_265/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "resnet_v2_50/conv1/biases"
  input: "save/restore_slice_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_266/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/conv1/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_266/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_266"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_266/tensor_name"
  input: "save/restore_slice_266/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "resnet_v2_50/conv1/weights"
  input: "save/restore_slice_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_267/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/logits/biases/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_267/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_267"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_267/tensor_name"
  input: "save/restore_slice_267/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "resnet_v2_50/logits/biases"
  input: "save/restore_slice_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_268/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/logits/weights/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_268/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_268"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_268/tensor_name"
  input: "save/restore_slice_268/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "resnet_v2_50/logits/weights"
  input: "save/restore_slice_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2048
          }
          dim {
            size: 1001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_269/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/postnorm/beta/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_269/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_269"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_269/tensor_name"
  input: "save/restore_slice_269/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "resnet_v2_50/postnorm/beta"
  input: "save/restore_slice_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_270/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/postnorm/gamma/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_270/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_270"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_270/tensor_name"
  input: "save/restore_slice_270/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "resnet_v2_50/postnorm/gamma"
  input: "save/restore_slice_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_271/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/postnorm/moving_mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_271/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_271"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_271/tensor_name"
  input: "save/restore_slice_271/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "resnet_v2_50/postnorm/moving_mean"
  input: "save/restore_slice_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_272/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "resnet_v2_50/postnorm/moving_variance/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/restore_slice_272/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_272"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_272/tensor_name"
  input: "save/restore_slice_272/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "resnet_v2_50/postnorm/moving_variance"
  input: "save/restore_slice_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/conv1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/conv1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_259"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_260"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_261"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_262"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_263"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_264"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_265"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_266"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_267"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/postnorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_268"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/postnorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_269"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/postnorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_270"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/postnorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/postnorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_271"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_272"
  op: "IsVariableInitialized"
  input: "resnet_v2_50/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v2_50/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_273"
  op: "IsVariableInitialized"
  input: "accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_274"
  op: "IsVariableInitialized"
  input: "accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_275"
  op: "IsVariableInitialized"
  input: "recall_at_5/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_276"
  op: "IsVariableInitialized"
  input: "recall_at_5/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall_at_5/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  input: "report_uninitialized_variables/IsVariableInitialized_177"
  input: "report_uninitialized_variables/IsVariableInitialized_178"
  input: "report_uninitialized_variables/IsVariableInitialized_179"
  input: "report_uninitialized_variables/IsVariableInitialized_180"
  input: "report_uninitialized_variables/IsVariableInitialized_181"
  input: "report_uninitialized_variables/IsVariableInitialized_182"
  input: "report_uninitialized_variables/IsVariableInitialized_183"
  input: "report_uninitialized_variables/IsVariableInitialized_184"
  input: "report_uninitialized_variables/IsVariableInitialized_185"
  input: "report_uninitialized_variables/IsVariableInitialized_186"
  input: "report_uninitialized_variables/IsVariableInitialized_187"
  input: "report_uninitialized_variables/IsVariableInitialized_188"
  input: "report_uninitialized_variables/IsVariableInitialized_189"
  input: "report_uninitialized_variables/IsVariableInitialized_190"
  input: "report_uninitialized_variables/IsVariableInitialized_191"
  input: "report_uninitialized_variables/IsVariableInitialized_192"
  input: "report_uninitialized_variables/IsVariableInitialized_193"
  input: "report_uninitialized_variables/IsVariableInitialized_194"
  input: "report_uninitialized_variables/IsVariableInitialized_195"
  input: "report_uninitialized_variables/IsVariableInitialized_196"
  input: "report_uninitialized_variables/IsVariableInitialized_197"
  input: "report_uninitialized_variables/IsVariableInitialized_198"
  input: "report_uninitialized_variables/IsVariableInitialized_199"
  input: "report_uninitialized_variables/IsVariableInitialized_200"
  input: "report_uninitialized_variables/IsVariableInitialized_201"
  input: "report_uninitialized_variables/IsVariableInitialized_202"
  input: "report_uninitialized_variables/IsVariableInitialized_203"
  input: "report_uninitialized_variables/IsVariableInitialized_204"
  input: "report_uninitialized_variables/IsVariableInitialized_205"
  input: "report_uninitialized_variables/IsVariableInitialized_206"
  input: "report_uninitialized_variables/IsVariableInitialized_207"
  input: "report_uninitialized_variables/IsVariableInitialized_208"
  input: "report_uninitialized_variables/IsVariableInitialized_209"
  input: "report_uninitialized_variables/IsVariableInitialized_210"
  input: "report_uninitialized_variables/IsVariableInitialized_211"
  input: "report_uninitialized_variables/IsVariableInitialized_212"
  input: "report_uninitialized_variables/IsVariableInitialized_213"
  input: "report_uninitialized_variables/IsVariableInitialized_214"
  input: "report_uninitialized_variables/IsVariableInitialized_215"
  input: "report_uninitialized_variables/IsVariableInitialized_216"
  input: "report_uninitialized_variables/IsVariableInitialized_217"
  input: "report_uninitialized_variables/IsVariableInitialized_218"
  input: "report_uninitialized_variables/IsVariableInitialized_219"
  input: "report_uninitialized_variables/IsVariableInitialized_220"
  input: "report_uninitialized_variables/IsVariableInitialized_221"
  input: "report_uninitialized_variables/IsVariableInitialized_222"
  input: "report_uninitialized_variables/IsVariableInitialized_223"
  input: "report_uninitialized_variables/IsVariableInitialized_224"
  input: "report_uninitialized_variables/IsVariableInitialized_225"
  input: "report_uninitialized_variables/IsVariableInitialized_226"
  input: "report_uninitialized_variables/IsVariableInitialized_227"
  input: "report_uninitialized_variables/IsVariableInitialized_228"
  input: "report_uninitialized_variables/IsVariableInitialized_229"
  input: "report_uninitialized_variables/IsVariableInitialized_230"
  input: "report_uninitialized_variables/IsVariableInitialized_231"
  input: "report_uninitialized_variables/IsVariableInitialized_232"
  input: "report_uninitialized_variables/IsVariableInitialized_233"
  input: "report_uninitialized_variables/IsVariableInitialized_234"
  input: "report_uninitialized_variables/IsVariableInitialized_235"
  input: "report_uninitialized_variables/IsVariableInitialized_236"
  input: "report_uninitialized_variables/IsVariableInitialized_237"
  input: "report_uninitialized_variables/IsVariableInitialized_238"
  input: "report_uninitialized_variables/IsVariableInitialized_239"
  input: "report_uninitialized_variables/IsVariableInitialized_240"
  input: "report_uninitialized_variables/IsVariableInitialized_241"
  input: "report_uninitialized_variables/IsVariableInitialized_242"
  input: "report_uninitialized_variables/IsVariableInitialized_243"
  input: "report_uninitialized_variables/IsVariableInitialized_244"
  input: "report_uninitialized_variables/IsVariableInitialized_245"
  input: "report_uninitialized_variables/IsVariableInitialized_246"
  input: "report_uninitialized_variables/IsVariableInitialized_247"
  input: "report_uninitialized_variables/IsVariableInitialized_248"
  input: "report_uninitialized_variables/IsVariableInitialized_249"
  input: "report_uninitialized_variables/IsVariableInitialized_250"
  input: "report_uninitialized_variables/IsVariableInitialized_251"
  input: "report_uninitialized_variables/IsVariableInitialized_252"
  input: "report_uninitialized_variables/IsVariableInitialized_253"
  input: "report_uninitialized_variables/IsVariableInitialized_254"
  input: "report_uninitialized_variables/IsVariableInitialized_255"
  input: "report_uninitialized_variables/IsVariableInitialized_256"
  input: "report_uninitialized_variables/IsVariableInitialized_257"
  input: "report_uninitialized_variables/IsVariableInitialized_258"
  input: "report_uninitialized_variables/IsVariableInitialized_259"
  input: "report_uninitialized_variables/IsVariableInitialized_260"
  input: "report_uninitialized_variables/IsVariableInitialized_261"
  input: "report_uninitialized_variables/IsVariableInitialized_262"
  input: "report_uninitialized_variables/IsVariableInitialized_263"
  input: "report_uninitialized_variables/IsVariableInitialized_264"
  input: "report_uninitialized_variables/IsVariableInitialized_265"
  input: "report_uninitialized_variables/IsVariableInitialized_266"
  input: "report_uninitialized_variables/IsVariableInitialized_267"
  input: "report_uninitialized_variables/IsVariableInitialized_268"
  input: "report_uninitialized_variables/IsVariableInitialized_269"
  input: "report_uninitialized_variables/IsVariableInitialized_270"
  input: "report_uninitialized_variables/IsVariableInitialized_271"
  input: "report_uninitialized_variables/IsVariableInitialized_272"
  input: "report_uninitialized_variables/IsVariableInitialized_273"
  input: "report_uninitialized_variables/IsVariableInitialized_274"
  input: "report_uninitialized_variables/IsVariableInitialized_275"
  input: "report_uninitialized_variables/IsVariableInitialized_276"
  attr {
    key: "N"
    value {
      i: 277
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 277
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 277
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 277
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 277
          }
        }
        string_val: "global_step"
        string_val: "resnet_v2_50/conv1/weights"
        string_val: "resnet_v2_50/conv1/biases"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/weights"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/shortcut/biases"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block1/unit_1/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block1/unit_2/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block1/unit_3/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/weights"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/shortcut/biases"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block2/unit_1/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block2/unit_2/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block2/unit_3/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block2/unit_4/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/weights"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/shortcut/biases"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_1/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_2/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_3/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_4/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_5/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block3/unit_6/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/weights"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/shortcut/biases"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block4/unit_1/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block4/unit_2/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/beta"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/gamma"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_mean"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/preact/moving_variance"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/weights"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/weights"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/beta"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/gamma"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/weights"
        string_val: "resnet_v2_50/block4/unit_3/bottleneck_v2/conv3/biases"
        string_val: "resnet_v2_50/postnorm/beta"
        string_val: "resnet_v2_50/postnorm/gamma"
        string_val: "resnet_v2_50/postnorm/moving_mean"
        string_val: "resnet_v2_50/postnorm/moving_variance"
        string_val: "resnet_v2_50/logits/weights"
        string_val: "resnet_v2_50/logits/biases"
        string_val: "accuracy/total"
        string_val: "accuracy/count"
        string_val: "recall_at_5/total"
        string_val: "recall_at_5/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 277
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 277
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 277
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^accuracy/total/Assign"
  input: "^accuracy/count/Assign"
  input: "^recall_at_5/total/Assign"
  input: "^recall_at_5/count/Assign"
}
node {
  name: "init_all_tables_1"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables_1"
}
versions {
  producer: 12
}
