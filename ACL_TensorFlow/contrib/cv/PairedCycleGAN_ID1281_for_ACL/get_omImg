# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
# Copyright 2021 Huawei Technologies Co., Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import numpy as np
from keras.utils import to_categorical
from keras.preprocessing.image import ImageDataGenerator
import numpy as np
import tensorflow as tf
from tensorflow import keras
from imageio import imsave

with tf.Session() as sess:
    imgData = np.fromfile('C:/Users/xkh/Desktop/PairedCycleGAN_output_0.bin', dtype='float32')
    img=imgData.reshape(256,256,3)
    # img2=(img+1)*127.5
    # encoded_image = tf.image.encode_jpeg(img2)
    # with tf.gfile.GFile('./results/resimg3.jpg', 'wb') as f:
    #     f.write(encoded_image.eval())
    # print(img)
    imsave("./results/resimg6.jpg",
           ((img + 1) * 127.5).astype(np.float32))
